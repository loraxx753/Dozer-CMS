// Generated by CoffeeScript 1.6.2
(function() {
  var activeTypes, oldHref;

  Array.prototype.remove = function(from, to) {
    var rest;

    rest = this.slice((to || from) + 1 || this.length);
    if (from < 0) {
      this.length = this.length + from;
    } else {
      this.length = from;
    }
    return this.push.apply(this, rest);
  };

  activeTypes = [];

  oldHref = '';

  $(".sortable").sortable({
    connectWith: ".connected",
    items: ':not(.disabled)',
    forcePlaceholderSize: true
  });

  $('.sortable').sortable().bind('sortupdate', function(e, ui) {
    var cat, catId, index, projId;

    cat = $(ui.item).closest(".connected");
    catId = cat.data("id");
    cat.find(".empty-category").remove();
    projId = $(ui.item).data("id");
    index = $(ui.item).index();
    return $.post("admin/update/projects", {
      category: catId,
      newIndex: index,
      id: projId
    }, function(data) {});
  });

  $(".sortable").on("dragstart", function() {
    var par;

    par = $(this).closest(".connected");
    if (par.children().length === 1) {
      return par.append('<div class="row empty-category"><div class="span12"><p>There are no projects in this category</p></div></div>');
    }
  });

  $(".sortable").on("dragover", function() {
    return $(this).addClass("test");
  });

  $(".tags li a").on("click", function(e) {
    var tagType;

    e.preventDefault();
    tagType = $(this).data('type');
    if (activeTypes.indexOf(tagType) < 0) {
      activeTypes[activeTypes.length] = tagType;
    } else {
      activeTypes.remove(activeTypes.indexOf(tagType));
    }
    $(".tags li a[data-type=" + tagType + "]").parent().toggleClass("active");
    if (activeTypes.length > 0) {
      return $(".tags").each(function() {
        var type, visible, _i, _len;

        visible = true;
        for (_i = 0, _len = activeTypes.length; _i < _len; _i++) {
          type = activeTypes[_i];
          if ($(this).children("li").children("a[data-type=" + type + "]").length === 0) {
            visible = false;
            $(this).closest(".project-row").slideUp();
          }
        }
        if (visible === true) {
          return $(this).closest(".project-row").slideDown();
        }
      });
    } else {
      return $(".tags").closest(".project-row").slideDown();
    }
  });

  $(".bootswatch a").click(function(e) {
    var $currentActive, broken, current_css, folder, newHref;

    e.preventDefault();
    folder = $(this).data("name");
    $currentActive = $(".bootswatch .active");
    $currentActive.removeClass("active").children("a").html($currentActive.children("a").text());
    $(this).parent().addClass("active").children("a").html("<strong>" + $(".bootswatch .active").text() + "</strong>");
    current_css = $(this).text().toLowerCase();
    console.log(folder);
    if (folder !== "reset") {
      oldHref = $(".bootstrap").attr("href");
      broken = oldHref.split("css");
      newHref = broken[0] + "css/bootswatch/" + folder + "/bootstrap.min.css";
      $(".bootstrap").attr("href", newHref);
      return $(".custom_css").attr("disabled", true);
    } else {
      $(".bootstrap").attr("href", "/assets/css/bootstrap.css");
      return $(".custom_css").removeAttr("disabled");
    }
  });

  $("#save-css").click(function(e) {
    var folder;

    e.preventDefault();
    folder = $(".bootswatch .active").children("a").data("name");
    return $.post("admin/update/css", {
      "name": folder
    }, function(data) {
      return alert("updated");
    });
  });

}).call(this);
